name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push data_ingestion Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./data_ingestion
        file: ./data_ingestion/Dockerfile
        push: true
        tags: jojojochem/data_ingestion:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Build and push data_processing Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./data_processing
        file: ./data_processing/Dockerfile
        push: true
        tags: jojojochem/data_processing:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Build and push anomaly_detection_cgnn Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./anomaly_detection/cgnn
        file: ./anomaly_detection/cgnn/Dockerfile
        push: true
        tags: jojojochem/anomaly_detection_cgnn:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Build and push anomaly_detection_crca Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./anomaly_detection/crca
        file: ./anomaly_detection/crca/Dockerfile
        push: true
        tags: jojojochem/anomaly_detection_crca:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Build and push learning_adaptation Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./learning_adaptation
        file: ./learning_adaptation/Dockerfile
        push: true
        tags: jojojochem/learning_adaptation:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Build and push monitoring_project Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./user_interface/monitoring_project
        file: ./user_interface/monitoring_project/Dockerfile
        push: true
        tags: jojojochem/monitoring_project:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        version: 'latest'
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    - name: Add Prometheus Helm repository
      run: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update

    - name: Deploy Prometheus
      run: |
        kubectl create namespace monitoring || true
        helm install prometheus prometheus-community/prometheus -n monitoring

    - name: Install gke-gcloud-auth-plugin
      run: |
        echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
        sudo apt-get install -y apt-transport-https ca-certificates gnupg
        curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
        sudo apt-get update -y
        sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

    - name: Configure kubectl
      run: |
        gcloud container clusters get-credentials cscluster --zone us-central1-a --project cloudsentinel-427513


    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/namespace-deployment.yml
        kubectl apply -f k8s/redis-deployment.yml
        kubectl apply -f k8s/data_ingestion_celery-deployment.yml
        kubectl apply -f k8s/data_ingestion-deployment.yml
        kubectl apply -f k8s/data_processing-deployment.yml
        kubectl apply -f k8s/cgnn_anomaly_detection-deployment.yml
        kubectl apply -f k8s/crca_anomaly_detection-deployment.yml
        kubectl apply -f k8s/learning_adaptation-deployment.yml
        kubectl apply -f k8s/learning_adaptation-celery-deployment.yml
        kubectl apply -f k8s/crca_anomaly_detection-celery-deployment.yml
        kubectl apply -f k8s/monitoring_project-deployment.yml
